<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.subway.ssm.mapper.CommentMapper">
    <resultMap id="BaseResultMap" type="com.subway.ssm.entity.Comment">
        <id column="comment_id" property="commentId" jdbcType="INTEGER"/>
        <result column="comment_pid" property="commentPid" jdbcType="INTEGER"/>
        <result column="comment_pname" property="commentPname" jdbcType="VARCHAR"/>
        <result column="comment_article_id" property="commentArticleId" jdbcType="INTEGER"/>
        <result column="comment_author_name" property="commentAuthorName" jdbcType="VARCHAR"/>
        <result column="comment_author_email" property="commentAuthorEmail" jdbcType="VARCHAR"/>
        <result column="comment_author_url" property="commentAuthorUrl" jdbcType="VARCHAR"/>
        <result column="comment_author_avatar" property="commentAuthorAvatar" jdbcType="VARCHAR"/>
        <result column="comment_content" property="commentContent" jdbcType="VARCHAR"/>
        <result column="comment_agent" property="commentAgent" jdbcType="VARCHAR"/>
        <result column="comment_ip" property="commentIp" jdbcType="VARCHAR"/>
        <result column="comment_create_time" property="commentCreateTime" jdbcType="TIMESTAMP"/>
        <result column="comment_role" property="commentRole" jdbcType="INTEGER"/>
        <result column="comment_user_id" property="commentUserId" jdbcType="INTEGER"/>
    </resultMap>

    <sql id="tb">comment</sql>

    <sql id="Base_Column_List">
    comment_id, comment_pid, comment_pname, comment_article_id, comment_author_name,
    comment_author_email, comment_author_url, comment_author_avatar, comment_content, comment_agent,
     comment_ip,comment_create_time, comment_role,comment_user_id
  </sql>


    <insert id="insert" parameterType="com.subway.ssm.entity.Comment" useGeneratedKeys="true"
            keyProperty="commentId">
        insert into
        <include refid="tb"/>
        (comment_pid, comment_pname, comment_article_id,
        comment_author_name, comment_author_email,
        comment_author_url, comment_author_avatar, comment_content, comment_agent,
        comment_ip, comment_create_time, comment_role, comment_user_id)
        values (#{commentPid,jdbcType=INTEGER}, #{commentPname,jdbcType=VARCHAR}, #{commentArticleId,jdbcType=INTEGER},
        #{commentAuthorName,jdbcType=VARCHAR}, #{commentAuthorEmail,jdbcType=VARCHAR},
        #{commentAuthorUrl,jdbcType=VARCHAR},#{commentAuthorAvatar}, #{commentContent,jdbcType=VARCHAR},
        #{commentAgent,jdbcType=VARCHAR},
        #{commentIp,jdbcType=VARCHAR}, #{commentCreateTime,jdbcType=TIMESTAMP}, #{commentRole,jdbcType=INTEGER},
        #{commentUserId,jdbcType=INTEGER})
    </insert>



    <select id="listCommentByArticleId" resultType="com.subway.ssm.entity.Comment">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        <include refid="tb"/>
        WHERE
        comment_article_id = #{id}
        ORDER BY comment_id ASC
    </select>


    <delete id="deleteByUserId">
        delete from
        <include refid="tb"/>
        WHERE comment_user_id = #{userId}
    </delete>


    <delete id="deleteByArticleId">
        delete from
        <include refid="tb"/>
        WHERE comment_article_id = #{articleId}
    </delete>

    <delete id="deleteBycommentId">
        delete from
        <include refid="tb" />
        WHERE comment_id = #{commentUserId}
    </delete>

</mapper>